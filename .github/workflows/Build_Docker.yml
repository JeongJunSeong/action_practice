name: Build Docker

on:
  push:
    branches:
      - 'main'                  # main 브랜치에서만 실행
    paths:
      - 'requirements.txt'      # requirements.txt 파일이 변경되었을 때
      - 'Dockerfile'             # Dockerfile 파일이 변경되었을 때
  pull_request:
    branches:
      - 'main'                  # main 브랜치에서만 실행
    paths:
      - 'requirements.txt'      # requirements.txt 파일이 변경되었을 때
      - 'Dockerfile'             # Dockerfile 파일이 변경되었을 때
  
jobs:
  build-docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
    
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: ~/.cache/docker
          key: ${{ runner.os }}-docker-${{ hashFiles('**/Dockerfile', '**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-docker-
            
      # Docker 이미지 빌드
      - name: Build Docker image
        run: |
          echo "Starting Docker build..."
          docker build -t my-airflow .
          echo "Docker build completed."

      # 이미지 테스트 (예: 이미지 확인)
      - name: Verify Docker image
        run: |
          echo "Verifying Docker image..."
          docker images | grep my-airflow || echo "Docker image not found!"
          echo "Docker image verification completed."

      # 설치된 패키지 확인
      - name: List installed packages
        run: |
          echo "Listing installed packages..."
          docker run --rm my-airflow pip list || echo "No packages found!"
          echo "Package listing completed."

      # Airflow 컨테이너 실행
      - name: Run Airflow container
        run: |
          docker run -d -p 8080:8080 --name my-airflow my-airflow
          sleep 30  # Airflow가 시작될 때까지 기다리기

      # Airflow DAG 트리거
      - name: Trigger Airflow DAG
        run: |
          docker exec my-airflow airflow dags trigger recommend_dag
          echo "DAG trigger completed."

      # DAG 실행 상태 확인
      - name: Verify DAG execution
        run: |
          docker exec my-airflow airflow tasks list recommend_dag
          echo "DAG tasks listed."

      # Docker 컨테이너 종료
      - name: Clean up Docker container
        run: |
          docker stop my-airflow
          
